// <auto-generated />
using System;
using Api.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations.Fitness
{
    [DbContext(typeof(FitnessContext))]
    partial class FitnessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Nutrition.Foods.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRecipe")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Api.Nutrition.Foods.FoodUnit", b =>
                {
                    b.Property<int>("FoodUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodUnitId"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<double>("Carbs")
                        .HasColumnType("float");

                    b.Property<double>("Fat")
                        .HasColumnType("float");

                    b.Property<double>("Fiber")
                        .HasColumnType("float");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.Property<double>("Sugar")
                        .HasColumnType("float");

                    b.HasKey("FoodUnitId");

                    b.HasIndex("FoodId");

                    b.ToTable("FoodUnits");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlan", b =>
                {
                    b.Property<int>("NutritionPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionPlanId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NutritionPlanId");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlanFood", b =>
                {
                    b.Property<int>("NutritionPlanFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionPlanFoodId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("Eaten")
                        .HasColumnType("bit");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("NutritionPlanMealId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("NutritionPlanFoodId");

                    b.HasIndex("NutritionPlanMealId");

                    b.ToTable("NutritionPlanFoods");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlanMeal", b =>
                {
                    b.Property<int>("NutritionPlanMealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NutritionPlanMealId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NutritionPlanId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("NutritionPlanMealId");

                    b.HasIndex("NutritionPlanId");

                    b.ToTable("NutritionPlanMeals");
                });

            modelBuilder.Entity("Api.Nutrition.Foods.FoodUnit", b =>
                {
                    b.HasOne("Api.Nutrition.Foods.Food", "Food")
                        .WithMany("Units")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlanFood", b =>
                {
                    b.HasOne("Api.Nutrition.Plans.NutritionPlanMeal", "NutritionPlanMeal")
                        .WithMany("Foods")
                        .HasForeignKey("NutritionPlanMealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NutritionPlanMeal");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlanMeal", b =>
                {
                    b.HasOne("Api.Nutrition.Plans.NutritionPlan", "NutritionPlan")
                        .WithMany()
                        .HasForeignKey("NutritionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NutritionPlan");
                });

            modelBuilder.Entity("Api.Nutrition.Foods.Food", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("Api.Nutrition.Plans.NutritionPlanMeal", b =>
                {
                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
